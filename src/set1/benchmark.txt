
// BENCHMARK INFO
// use std::time::Instant;
// const TEST_STRINGS: [&str; 3] = [
//     "49276d206b696c6c696e6720796f757220627261696e206c696b65206120706f69736f6e6f7573206d757368726f6f6d",
//     "6a6570726f662063616e20636f6d7061726520616e792074776f206f662074686520726573756c74696e6720736572696573206f662070726f66696c652064756d70732c20616e642073686f77207768617420616c6c6f636174696f6e206163746976697479206f6363757272656420647572696e672074686520696e74657276656e696e672074696d652e2055736520746865202d2d626173653d3c626173653e20666c616720746f2073706563696679207468652066697273742070726f66696c652e0a0a497420697320706f737369626c6520746f20737461727420616e206170706c69636174696f6e20776974682070726f66696c696e6720656e61626c65642062757420696e6163746976652c2062792073706563696679696e67204d414c4c4f435f434f4e463d70726f665f6163746976653a66616c73652e2054686973206973206f6e6c792075736566756c20696620746865206170706c69636174696f6e206d616e75616c6c79206163746976617465732f64656163746976617465732070726f66696c696e672076696120746865202270726f662e61637469766522206d616c6c63746c20647572696e6720657865637574696f6e2e2055736520636173657320696e636c7564653a0a0a41637469766174652070726f66696c696e6720616674657220696e697469616c697a6174696f6e20697320636f6d706c6574652c20736f20746861742070726f66696c6573206f6e6c792073686f77206f626a6563747320616c6c6f636174656420647572696e67207374656164792d737461746520657865637574696f6e2e0a44756d7020612070726f66696c652c2061637469766174652070726f66696c696e6720666f72203330207365636f6e64732c2077616974203330207365636f6e647320616674657220646561637469766174696e672070726f66696c696e672c207468656e2064756d7020616e6f746865722070726f66696c6520616e6420757365206a6570726f6620746f20636f6d70617265207468652074776f2064756d70732e20546869732077696c6c20666f637573206f6e206f626a656374732074686174207765726520616c6c6f636174656420647572696e67207374656164792d737461746520657865637574696f6e2c2062757420617265206c6f6e672d6c697665642e205468657365206f626a6563747320617265207072696d652063616e6469646174657320666f72206578706c61696e696e67206d656d6f72792067726f777468206f7665722074696d652e0a0a57616c6b696e67207468652063616c6c20737461636b20746f20636170747572652061206261636b7472616365206973207479706963616c6c7920717569746520636f6d7075746174696f6e616c6c7920696e74656e736976652e205468657265666f726520697420697320696e6665617369626c6520746f207573652070726563697365206c65616b20636865636b696e6720666f72206c6f6e672d6c697665642c2068656176696c79206c6f61646564206170706c69636174696f6e732e20537461746973746963616c2073616d706c696e67206f6620616c6c6f636174696f6e73206d616b657320697420706f737369626c6520746f206b6565702074686520636f6d7075746174696f6e616c206f76657268656164206c6f772c207965742067657420612067656e6572616c2069646561206f6620686f7720746865206170706c69636174696f6e207574696c697a6573206d656d6f72792e2053656520746865206c675f70726f665f73616d706c65204d414c4c4f435f434f4e46206f7074696f6e20666f7220696e666f726d6174696f6e206f6e20636f6e74726f6c6c696e672073616d706c696e6720696e74657276616c2e220a6a6570726f662063616e20636f6d7061726520616e792074776f206f662074686520726573756c74696e6720736572696573206f662070726f66696c652064756d70732c20616e642073686f77207768617420616c6c6f636174696f6e206163746976697479206f6363757272656420647572696e672074686520696e74657276656e696e672074696d652e2055736520746865202d2d626173653d3c626173653e20666c616720746f2073706563696679207468652066697273742070726f66696c652e0a0a497420697320706f737369626c6520746f20737461727420616e206170706c69636174696f6e20776974682070726f66696c696e6720656e61626c65642062757420696e6163746976652c2062792073706563696679696e67204d414c4c4f435f434f4e463d70726f665f6163746976653a66616c73652e2054686973206973206f6e6c792075736566756c20696620746865206170706c69636174696f6e206d616e75616c6c79206163746976617465732f64656163746976617465732070726f66696c696e672076696120746865202270726f662e61637469766522206d616c6c63746c20647572696e6720657865637574696f6e2e2055736520636173657320696e636c7564653a0a0a41637469766174652070726f66696c696e6720616674657220696e697469616c697a6174696f6e20697320636f6d706c6574652c20736f20746861742070726f66696c6573206f6e6c792073686f77206f626a6563747320616c6c6f636174656420647572696e67207374656164792d737461746520657865637574696f6e2e0a44756d7020612070726f66696c652c2061637469766174652070726f66696c696e6720666f72203330207365636f6e64732c2077616974203330207365636f6e647320616674657220646561637469766174696e672070726f66696c696e672c207468656e2064756d7020616e6f746865722070726f66696c6520616e6420757365206a6570726f6620746f20636f6d70617265207468652074776f2064756d70732e20546869732077696c6c20666f637573206f6e206f626a656374732074686174207765726520616c6c6f636174656420647572696e67207374656164792d737461746520657865637574696f6e2c2062757420617265206c6f6e672d6c697665642e205468657365206f626a6563747320617265207072696d652063616e6469646174657320666f72206578706c61696e696e67206d656d6f72792067726f777468206f7665722074696d652e0a0a57616c6b696e67207468652063616c6c20737461636b20746f20636170747572652061206261636b7472616365206973207479706963616c6c7920717569746520636f6d7075746174696f6e616c6c7920696e74656e736976652e205468657265666f726520697420697320696e6665617369626c6520746f207573652070726563697365206c65616b20636865636b696e6720666f72206c6f6e672d6c697665642c2068656176696c79206c6f61646564206170706c69636174696f6e732e20537461746973746963616c2073616d706c696e67206f6620616c6c6f636174696f6e73206d616b657320697420706f737369626c6520746f206b6565702074686520636f6d7075746174696f6e616c206f76657268656164206c6f772c207965742067657420612067656e6572616c2069646561206f6620686f7720746865206170706c69636174696f6e207574696c697a6573206d656d6f72792e2053656520746865206c675f70726f665f73616d706c65204d414c4c4f435f434f4e46206f7074696f6e20666f7220696e666f726d6174696f6e206f6e20636f6e74726f6c6c696e672073616d706c696e6720696e74657276616c2e220a",
//     "68656c6c6f207275737420666f6c6b7321"
// ];
// fn get_iterations() -> usize {
//     if cfg!(debug_assertions) {
//         2_000
//     } else {
//         50_000
//     }
// }
// fn do_benchmark(fn_under_test: fn(&str) -> String, fn_name: &str, iterations: usize) {
//     let instant = Instant::now();
//     for _ in 0..iterations {
//         for test_string in TEST_STRINGS.iter() {
//             fn_under_test(test_string);
//         }
//     }
//     let after = instant.elapsed();
//     println!("{} impl: {:?}", fn_name, after);
// }
// let iterations = get_iterations();
// do_benchmark(set1::challenge1::hex_str_to_base_64_str, "C", iterations);
